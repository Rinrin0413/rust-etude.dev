#[allow(unused)]
pub fn lifetime() {
 // ライフタイムで参照を検証する
    // 参照や借用 において 一つ重要な詳細を説明していなかった
    // Rust において参照は 全てライフタイムを保持している
    // ライフタイムとは その参照が有効になるスコープのこと
    // 多くの場合、型が推論されるのと同じく ライフタイムも暗黙的に推論される
    // 複数の型が推論される場合は 型を注釈する必要があった
    // 同様に、参照のライフタイムが 幾つかの方法で関係する可能性がある場合は注釈しなければならない
    // コンパイラに ジェネリックライフタイム引数を使って関係を注釈して、
    // 実行時に「実際の参照が確かに有効であること」を保証しなければならない
    // ライフタイムの概念は、他のプログラミング言語の道具とは異端で 確実で Rust で1番際立つ機能となる

    // 今回でライフタイムの全体を解説することはない。ライフタイム記法が必要となる最も一般的な場合について学ぶ
    // ライフタイムの概念に馴染めるといいな( 'ω')
}